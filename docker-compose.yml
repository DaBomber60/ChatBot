services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: homechatbot-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-homechatbot}
      - POSTGRES_USER=${POSTGRES_USER:-homechatbot}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-homechatbot_secure_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - chatbot-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-homechatbot} -d ${POSTGRES_DB:-homechatbot}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # HomeChatBot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: homechatbot-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-homechatbot}:${POSTGRES_PASSWORD:-homechatbot_secure_password}@postgres:5432/${POSTGRES_DB:-homechatbot}?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${APP_PORT:-3000}
    ports:
      - "${APP_PORT:-3000}:3000"
    networks:
      - chatbot-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Second HomeChatBot instance on port 3001
  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: homechatbot-app2
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-homechatbot}:${POSTGRES_PASSWORD:-homechatbot_secure_password}@postgres:5432/${POSTGRES_DB:-homechatbot}?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3000  # Internal port stays 3000
    ports:
      - "3001:3000"  # Map external 3001 to internal 3000
    networks:
      - chatbot-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy (for SSL, custom domains, etc.)
  nginx:
    image: nginx:alpine
    container_name: homechatbot-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Optional SSL certificates
    networks:
      - chatbot-network
    depends_on:
      - app
    profiles:
      - nginx  # Optional service, enable with --profile nginx

volumes:
  postgres_data:
    driver: local

networks:
  chatbot-network:
    driver: bridge
